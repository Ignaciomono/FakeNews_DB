# === FAKENEWS_DB PROJECT GITIGNORE ===# === FAKENEWS_DB PROJECT GITIGNORE ===

# Gitignore optimizado para FastAPI + PostgreSQL + Hugging Face API externa

# Environment variables and secrets

# === ENVIRONMENT VARIABLES AND SECRETS ===.env

.env.env.local

.env.local.env.*.local

.env.*.local.env.production

.env.production*.key

*.key*.pem

*.pemsecrets/

secrets/

# Python cache and bytecode

# === PYTHON CACHE AND BYTECODE ===__pycache__/

__pycache__/*.py[cod]

*.py[cod]*$py.class

*$py.class*.so

*.so.Python

.Pythonbuild/

build/develop-eggs/

develop-eggs/dist/

dist/downloads/

downloads/

eggs/# Python cache and bytecodeeggs/

.eggs/

lib/__pycache__/.eggs/

lib64/

parts/*.py[cod]lib/

sdist/

var/*$py.classlib64/

wheels/

share/python-wheels/*.soparts/

*.egg-info/

.installed.cfg.Pythonsdist/

*.egg

MANIFESTbuild/var/



# === VIRTUAL ENVIRONMENTS ===develop-eggs/wheels/

venv/

env/dist/share/python-wheels/

ENV/

env.bak/downloads/*.egg-info/

venv.bak/

.venv/eggs/.installed.cfg



# === IDES AND EDITORS ===.eggs/*.egg

.vscode/

.idea/lib/MANIFEST

*.swp

*.swolib64/

*~

.projectparts/# PyInstaller

.classpath

.settings/sdist/*.manifest

*.sublime-*

var/*.spec

# === OS GENERATED FILES ===

.DS_Storewheels/

.DS_Store?

._*share/python-wheels/# Installer logs

.Spotlight-V100

.Trashes*.egg-info/pip-log.txt

ehthumbs.db

Thumbs.db.installed.cfgpip-delete-this-directory.txt

desktop.ini

*.egg

# === TESTING AND COVERAGE ===

.tox/MANIFEST# Unit test / coverage reports

.nox/

.coveragehtmlcov/

.coverage.*

.cache# Virtual environments.tox/

nosetests.xml

coverage.xmlvenv/.nox/

*.cover

*.py,coverenv/.coverage

.hypothesis/

.pytest_cache/ENV/.coverage.*

htmlcov/

env.bak/.cache

# === DOCUMENTATION ===

docs/_build/venv.bak/nosetests.xml



# === DATABASE FILES ===.venv/coverage.xml

*.db

*.sqlite.env/*.cover

*.sqlite3

db.sqlite3*.py,cover

database.db

postgresql.log# IDEs and editors.hypothesis/

pg_log/

.vscode/.pytest_cache/

# === LOGS ===

*.log.idea/cover/

logs/

*.swp

# === FASTAPI SPECIFIC ===

.pytest_cache/*.swo# Translations



# === JUPYTER NOTEBOOK ===*~*.mo

.ipynb_checkpoints

.project*.pot

# === TRANSLATIONS ===

*.mo.classpath

*.pot

.settings/# Django stuff:

# === DJANGO (if mixed project) ===

local_settings.py*.sublime-**.log

db.sqlite3-journal

local_settings.py

# === FLASK (if mixed project) ===

instance/# OS generated filesdb.sqlite3

.webassets-cache

.DS_Storedb.sqlite3-journal

# === SCRAPY ===

.scrapy.DS_Store?



# === SPHINX DOCUMENTATION ===._*# Flask stuff:

docs/_build/

.Spotlight-V100instance/

# === PYBUILDER ===

.pybuilder/.Trashes.webassets-cache

target/

ehthumbs.db

# === PYENV ===

.python-versionThumbs.db# Scrapy stuff:



# === PIPENV ===desktop.ini.scrapy

Pipfile.lock



# === POETRY ===

poetry.lock# FastAPI and web frameworks# Sphinx documentation



# === PDM ===*.logdocs/_build/

.pdm.toml

logs/

# === PEP 582 ===

__pypackages__/.coverage# PyBuilder



# === CELERY ===.pytest_cache/.pybuilder/

celerybeat-schedule

celerybeat.pid.tox/target/



# === AI MODELS AND DATA (No needed for external API) ===.nox/

# models/

# *.model.coverage.*# Jupyter Notebook

# *.pkl

# *.joblibhtmlcov/.ipynb_checkpoints

# *.h5

# *.hdf5.cache



# === SAGEMATH ===nosetests.xml# IPython

*.sage.py

coverage.xmlprofile_default/

# === DEPLOYMENT ===

.vercel*.coveripython_config.py



# === PROJECT SPECIFIC ===*.py,cover

# Temporary files

temp/.hypothesis/# pyenv

tmp/

*.tmp.python-version



# Local backup files# Database files

*.bak

*.backup*.db# pipenv



# Local development files*.sqlitePipfile.lock

dev/

local/*.sqlite3



# === HUGGING FACE CACHE (Optional) ===db.sqlite3# poetry

# .cache/huggingface/

database.dbpoetry.lock

# === LARGE FILES (Git LFS should be used) ===

*.zip

*.tar.gz

*.rar# PostgreSQL# pdm

*.sql.pdm.toml

pg_log/

postgresql.log# PEP 582

__pypackages__/

# AI Models and data

models/# Celery stuff

*.modelcelerybeat-schedule

*.pklcelerybeat.pid

*.joblib

*.h5# SageMath parsed files

*.hdf5*.sage.py

*.onnx

*.pb# Environments

data/.env

datasets/.venv

checkpoints/env/

cache/venv/

.cache/ENV/

env.bak/

# Hugging Face cachevenv.bak/

.transformers_cache/

.huggingface/# Spyder project settings

transformers_cache/.spyderproject

.spyproject

# PyTorch cache

.torch/# Rope project settings

torch_cache/.ropeproject



# Temporary files# mkdocs documentation

temp//site

tmp/

*.tmp# mypy

*.temp.mypy_cache/

.temp/.dmypy.json

dmypy.json

# Test outputs

test_results/# Pyre type checker

test_reports/.pyre/

.pytest_cache/

# pytype static type analyzer

# Documentation builds.pytype/

docs/_build/

site/# Cython debug symbols

cython_debug/

# Package files

*.tar.gz# PyCharm

*.zip.idea/

*.rar

# VS Code

# Jupyter Notebooks.vscode/

.ipynb_checkpoints/*.code-workspace

*.ipynb

# Vim

# Node.js (if using for frontend)*.swp

node_modules/*.swo

npm-debug.log**~

yarn-debug.log*

yarn-error.log*# Emacs

*~

# Backup files\#*\#

*.bak/.emacs.desktop

*.backup/.emacs.desktop.lock

*~*.elc

auto-save-list

# Custom exclusions for this projecttramp

test_outputs/.\#*

performance_logs/

analysis_cache/# OS generated files

backup/.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Linux
*~

# FastAPI specific
*.db
*.sqlite
*.sqlite3

# PostgreSQL
*.sql.backup
*.dump

# Alembic
# Uncomment if you want to ignore all version files
# alembic/versions/*.py

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# AI Model files (optional - uncomment if models are large)
# *.pt
# *.pth
# *.pkl
# *.joblib
# models/
# checkpoints/

# Backup files
*.bak
*.backup
*.tmp

# Archive files
*.zip
*.tar.gz
*.rar

# Configuration files with secrets
config.ini
settings.ini
secrets.json

# Certificate files
*.pem
*.key
*.crt
*.cert

# Media files (if not needed in repo)
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.mp4
# *.avi

# API keys and sensitive data
.secrets
api_keys.txt
credentials.json

# Performance monitoring
.prof

# Memory dumps
*.hprof
*.dump

# Generated documentation
docs/build/
docs/_build/

# Docker
.dockerignore
Dockerfile.prod

# Kubernetes
*.yaml.backup

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# Cloud function files
.gcloudignore

# MacOS
.AppleDouble
.LSOverride

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Project specific
uploads/
downloads/
cache/
.cache/
temp_files/